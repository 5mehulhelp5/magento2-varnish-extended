varnishtest "Marketing parameters are stripped from the URL hash"

barrier b1 cond 2

server s1 {
    # Probe request
    rxreq
    expect req.url == "/health_check.php"
    txresp

    # the probe expects the connection to close
    close
    barrier b1 sync
    accept

    # Initial request without marketing parameters
    rxreq
    expect req.url == "/product"
    expect req.method == "GET"
    txresp -body "Product page response"

    # Request with red color parameter
    rxreq
    expect req.url == "/product?color=red"
    expect req.method == "GET"
    txresp -body "Product page response"
} -start

# Generate the VCL file
shell {
    export s1_addr="${s1_addr}"
    export s1_port="${s1_port}"
    export TRACKING_PARAMETERS="utm_source|utm_medium|utm_campaign|gclid|cx|ie|cof|siteurl"
    ${testdir}/helpers/parse_vcl.pl "${testdir}/../../etc/varnish6.vcl" "${tmpdir}/output.vcl"
}

varnish v1 -arg "-f" -arg "${tmpdir}/output.vcl" -arg "-p" -arg "vsl_mask=+Hash" -start

# make sure the probe request fired
barrier b1 sync

logexpect l1 -v v1 -g request {
    expect * 1001 Hash ^/product$
    expect * 1003 Hash ^/product$
    expect * 1004 Hash ^/product$
    expect * 1005 Hash ^/product$
    expect * 1006 Hash ^/product\?color=red$
} -start

client c1 {
    # Initial request without marketing parameters
    txreq -method "GET" -url "/product"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"
    expect resp.body == "Product page response"

    # Request with marketing parameters - should be a cache hit
    # because parameters are stripped before hashing
    txreq -method "GET" -url "/product?utm_source=google&utm_medium=cpc&utm_campaign=spring_sale"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "HIT"
    expect resp.body == "Product page response"

    # Request with different marketing parameters - should also be a cache hit
    txreq -method "GET" -url "/product?utm_source=facebook&utm_medium=social&utm_campaign=summer_sale"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "HIT"
    expect resp.body == "Product page response"

    # Request with gclid parameter - should be a cache hit
    txreq -method "GET" -url "/product?gclid=Cj0KCQjw1aOpBhCOARIsACXYv-cQS7lAhOGa"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "HIT"
    expect resp.body == "Product page response"

    # Request with multiple marketing parameters and a non-marketing parameter
    # The non-marketing parameter should be preserved and cause a cache miss
    txreq -method "GET" -url "/product?utm_source=google&color=red&utm_campaign=spring_sale"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"
    expect resp.body == "Product page response"
} -run

logexpect l1 -wait
