varnishtest "xkey: (hard) purge the entire cache"

barrier b1 cond 2

server s1 {
    # first request will be the probe, handle it and be on our way
    rxreq
    expect req.url == "/health_check.php"
    txresp

    # the probe expects the connection to close
    close
    barrier b1 sync
    accept

    # Fill the cache
    rxreq
    expect req.url == "/"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_38,cat_p_694,cat_c_20" -hdr "Context: fill the cache"

    rxreq
    expect req.url == "/hero-hoodie.html"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_37,cat_p_694,cat_c_21" -hdr "Context: fill the cache"

    rxreq
    expect req.url == "/breathe-easy-tank.html"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_37,cat_p_695,cat_c_21" -hdr "Context: fill the cache"

    # hard purge everything
    rxreq
    expect req.url == "/"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_38,cat_p_694,cat_c_20" -hdr "Context: hard purge everything"

    rxreq
    expect req.url == "/hero-hoodie.html"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_37,cat_p_694,cat_c_21" -hdr "Context: hard purge everything"

    rxreq
    expect req.url == "/breathe-easy-tank.html"
    expect req.method == "GET"
    txresp -hdr "X-Magento-Tags: cat_c,cat_c_37,cat_p_695,cat_c_21" -hdr "Context: hard purge everything"
} -start

# Generate the VCL file based on included variables and write it to output.vcl
shell {
    export s1_addr="${s1_addr}"
    export s1_port="${s1_port}"
    ${testdir}/helpers/parse_vcl.pl "${testdir}/../../etc/varnish6.vcl" "${tmpdir}/output.vcl"
}

varnish v1 -arg "-f" -arg "${tmpdir}/output.vcl" -arg "-p" -arg "vsl_mask=+Hash" -start

# make sure the probe request fired
barrier b1 sync

client c1 {
    # filling the cache
    txreq -method "GET" -url "/" -hdr "Context: fill the cache"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    txreq -method "GET" -url "/hero-hoodie.html" -hdr "Context: fill the cache"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    txreq -method "GET" -url "/breathe-easy-tank.html" -hdr "Context: fill the cache"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    # hard purge the entire cache
    txreq -method "PURGE" -url "/" -hdr "X-Magento-Tags-Pattern: .*"
    rxresp
    expect resp.status == 200
    expect resp.http.Content-Type == "application/json"
    expect resp.body == "{ \"invalidated\": 3 }"
    expect resp.reason == "OK"

    # hard purges cause cache misses
    txreq -method "GET" -url "/" -hdr "Context: hard purge everything"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    txreq -method "GET" -url "/hero-hoodie.html" -hdr "Context: hard purge everything"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"

    txreq -method "GET" -url "/breathe-easy-tank.html" -hdr "Context: hard purge everything"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"
} -run