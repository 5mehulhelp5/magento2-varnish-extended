varnishtest "health_check.php endpoint to trigger return(pass)"

server s1 {
    # Probe request
    rxreq
    expect req.url == "/health_check.php"
    txresp

    # the probe expects the connection to close
    close
    accept

    # Regular request to fill the cache
    rxreq
    expect req.url == "/regular-url"
    expect req.method == "GET"
    txresp -body "Regular response"

    # First health check request
    rxreq
    expect req.url == "/health_check.php"
    expect req.method == "GET"
    txresp -body "Health check response 1"

    # Second health check request - should also reach backend
    rxreq
    expect req.url == "/health_check.php"
    expect req.method == "GET"
    txresp -body "Health check response 2"
} -start

# Generate the VCL file
shell {
    export s1_addr="${s1_addr}"
    export s1_port="${s1_port}"
    ${testdir}/helpers/parse_vcl.pl "${testdir}/../../etc/varnish6.vcl" "${tmpdir}/output.vcl"
}

varnish v1 -arg "-f" -arg "${tmpdir}/output.vcl" -arg "-p" -arg "vsl_mask=+VCL_Log" -start

# make sure the probe request fired
delay 1

client c1 {
    # Regular request to fill the cache
    txreq -method "GET" -url "/regular-url"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "MISS"
    expect resp.body == "Regular response"

    # Verify cache hit for regular request
    txreq -method "GET" -url "/regular-url"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "HIT"
    expect resp.body == "Regular response"

    # First health check request - should pass to backend
    txreq -method "GET" -url "/health_check.php"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "UNCACHEABLE"
    expect resp.body == "Health check response 1"

    # Second health check request - should also pass to backend
    txreq -method "GET" -url "/health_check.php"
    rxresp
    expect resp.http.X-Magento-Cache-Debug == "UNCACHEABLE"
    expect resp.body == "Health check response 2"
} -run
